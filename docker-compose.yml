version: "3"

services:
  app:
    build: docker/php
#    image: codexten/php-fpm:${PHP_VERSION}
    restart: always
    working_dir: /projects
    volumes:
    - ./:/cpanel
    - /en:/en
    - /etc/hosts:/host-machine/hosts
#    - /disks:/disks
#    - ${DATA_PATH_HOST}/storage/source:/app/public/storage/source
    - ${HOME}/projects:/projects
    - ${HOME}/instances:/instances
    - ${HOME}/.ssh:/home/codexten/.ssh
    - ${HOME}/.composer:/home/codexten/.composer
    - ./docker/.bashrc:/home/codexten/.bashrc
    - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
  #    extra_hosts:
  #      - dev.entero.in:165.227.188.128
  nginx:
    build:
      context: docker/nginx
      args:
      - PHP_UPSTREAM_CONTAINER=app
      - PHP_UPSTREAM_PORT=9000
    restart: always
    volumes:
    #    - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    #    - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
    - ./docker/nginx/sites-available:/etc/nginx/sites-available
    - ./docker/nginx/ssl:/etc/nginx/ssl
    - ./:/cpanel
    - /en:/en
    - /etc/hosts:/host-machine/hosts
    - ${HOME}/projects:/projects
    - ${HOME}/instances:/instances
#    - /disks:/disks
#    - ${DATA_PATH_HOST}/storage/source:/app/public/storage/source
    - ${HOME}/apps:/root/apps
    - ${HOME}/disks:/root/disks
    - ./docker/.bashrc:/root/.bashrc
    - ./docker/data/certbot/conf:/etc/letsencrypt
    - ./docker/data/certbot/www:/var/www/certbot
    ports:
    - 80:80
    - 443:443
    depends_on:
    - app
  db:
    image: mysql:5.7
    restart: always
    volumes:
    - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
    - ./docker/mysql/config.cnf:/etc/mysql/conf.d/config.cnf
    - /disks:/disks
    ports:
    - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${CP_DB_ROOT_PASSWOD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${CP_DB_USERNAME}
      MYSQL_PASSWORD: ${CP_DB_ROOT_PASSWOD}
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_ARBITRARY: 1
      MYSQL_USER: ${CP_DB_USERNAME}
      MYSQL_PASSWORD: ${CP_DB_USERNAME}
      MYSQL_ROOT_PASSWORD: ${CP_DB_ROOT_PASSWOD}
    ports:
    - 8080:80
    links:
    - db
#  certbot:
#    image: certbot/certbot
#    restart: unless-stopped
#    volumes:
#      - ./docker/data/certbot/conf:/etc/letsencrypt
#      - ./docker/data/certbot/www:/var/www/certbot
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
#  mongo:
#    build: docker/mongo
#    ports:
#      - "27017:27017"
#    volumes:
#      - ${DATA_PATH_HOST}/mongo:/data/db
#  mongo-webui:
#    build:
#      context: docker/mongo-webui
#    environment:
#      - ROOT_URL=${MONGO_WEBUI_ROOT_URL}
##      - MONGO_URL=${MONGO_WEBUI_MONGO_URL}
#    volumes:
#      - ${DATA_PATH_HOST}/mongo-webui:/data/db
#    ports:
#      - "${MONGO_WEBUI_PORT}:3000"
#    depends_on:
#      - mongo
#    links:
#      - mongo
